<!--pages/img/img.wxml-->

<!--------------------------------------------------------------------------------------------
text相当于span标签，view相当于div标签，默认块级元素即换行 -->
<text>pages/img/img.wxml</text>
<!-- 使用模板语法的情况：1.js页面内的变量调用，2.传递实参给js页面，3某些字符串属性但要进行非字符串的操作 -->
<view>{{msg}}</view>

<!--------------------------------------------------------------------------------------------
三元表达式 -->
<view>{{10%2===0 ? "偶数" : "奇数"}}</view>

<!--------------------------------------------------------------------------------------------
列表循环，块级作用域命名:i命名，索引命名，和v-for一样，需要个key来绑定每个条目，可以是任意属性，
但需满足这是i的唯一标识，index和item不取名默认index，item -->
<view wx:for="{{list}}" wx:for-item="item" wx:for-index="index" wx:key="index">
  索引: {{index}}
  值: {{item.name}}
  id: {{item.id}}
</view>

<!--------------------------------------------------------------------------------------------
列表循环对象 -->
<view wx:for="{{person}}" wx:key="index">
  索引: {{index}}
  值: {{item}}
</view>

<!--------------------------------------------------------------------------------------------
条件渲染 -->
<view wx:if="true">
  我是if
</view>
<view wx:elif="false">
  我是else if
</view>
<!--hidden相当于v-show，不要和样式display合用，一样会显示 -->
<view wx:else="true" hidden="true">
  我是else
</view>

<!--------------------------------------------------------------------------------------------
响应式绑定函数 -->
<input type="text" bindinput="handleInput"/>
<view>
  {{num}}
</view>

<!--------------------------------------------------------------------------------------------
bindtap相当于click，不能像js"handleTap(1)"直接传参，而是通过data-operation -->
<button bindtap="handleTap" data-operation="{{1}}">+</button>
<button bindtap="handleTap" data-operation="{{-1}}">-</button>

<!--------------------------------------------------------------------------------------------
button的open-type选项
contact，客户对话
share，分享当前小程序
getPhoneNumber，企业微信功能，获取用户号码，需要绑定一函数使用
getUserInfo，获取用户信息，和上一样，但不需要解密
launchApp，打开对应小程序的app
openSettiong，打开小程序内部授权页面，只能获取已经授权的设置列表，如getPhoneNumber和getUserInfo
feedback，小程序内置的意见反馈，只能真机调试-->
<button open-type="contact">客服</button>
<button open-type="getUserInfo" bindgetuserinfo="getUserInfo">获取用户信息</button>
<button open-type="feedback">反馈</button>

<!--------------------------------------------------------------------------------------------
contact的实现流程
1.将新建项目的appid改为官网申请的appid
2.官网添加客服微信账号 -->
<view class="fff"></view>

<!--------------------------------------------------------------------------------------------
user-select文本是否可选，该属性会使文本节点显示为inline-block
decode是否解码，可解码的都在二行 -->
<text user-select="true" decode="true">
  how are you?
  &nbsp; &lt; &gt; &amp; &apos; &ensp; &emsp;
</text>

<!--------------------------------------------------------------------------------------------
图片，小程序打包有2m限制，因此无法使用本地静态资源，请使用图床 -->
<!-- <image src="https://s3.ax1x.com/2020/11/19/Du0VxK.jpg" alt=""></image> -->

<!--------------------------------------------------------------------------------------------
轮播图 -->
<swiper autoplay interval="3000" circular>
  <swiper-item><image src="https://s3.ax1x.com/2020/11/19/Du0VxK.jpg"></image></swiper-item>
  <swiper-item><image src="https://s3.ax1x.com/2020/11/19/DurpqS.jpg"></image></swiper-item>
  <swiper-item><image src="https://s3.ax1x.com/2020/11/19/DuDzKf.jpg"></image></swiper-item>
  <swiper-item><image src="https://s3.ax1x.com/2020/11/19/DurSr8.jpg"></image></swiper-item>
</swiper>

<!--------------------------------------------------------------------------------------------
页面跳转，类似a抱歉，被tabbar锁定得页面无法跳转 -->
<navigator url="/pages/notebook/notebook" open-type="redirect">首页</navigator>
<navigator url="/pages/img/img" open-type="redirect"></navigator>

<!--------------------------------------------------------------------------------------------
target选项：
self，自己的小程序
miniprogram，跳转到其他小程序 -->
<!-- open-type选项：
navigator，不关闭当前页面跳转除tababar的页面
redirect，关闭当前页面，跳转除tabbar的页面
switchTab，关闭当前除tabbar以外的页面，转换到其他tabbar页面
reLaunch，随便跳
navigateBack，backroute
exit，退出其他小程序，target="miniProgram生效" -->

<!--------------------------------------------------------------------------------------------
相当于v-html，富文本标签
html为html节点的字符串形式，data中定义
第二种即是list对象形式 -->
<rich-text nodes="{{html}}"/>

<!--------------------------------------------------------------------------------------------
小程序自带图标 -->
<icon type="success" size="" color=""></icon>

<!--------------------------------------------------------------------------------------------
radio，必须和raido-group绑定使用 -->
<radio-group bindchange="handleGender">
  <radio value="男" checked="true">男</radio>
  <radio value="女">女</radio>
</radio-group>
<view>你是{{gender}}性</view>

<!--------------------------------------------------------------------------------------------
checkbox -->
<checkbox-group bindchange="handleList">
  <checkbox value="{{item.id}}" wx:for="{{checkboxlist}}" wx:key="index">
    {{item.name}}
  </checkbox>
</checkbox-group>
<view>你选中了：{{checkedlist}}</view>

<!--------------------------------------------------------------------------------------------
组件：1.新建组件相关文件，文件名最好和文件夹一致，2.在要使用组件的pages的json中注册组件的名字和路径，路径url不包括后缀名
3.模板标签使用组件 -->
<!-- 父传子和vue类似，将hello传给子properties，类型要正确，不能用[]等符号
子传父，this.$emit改为了this.triggerEvent("ebody", i)，这里发射的是ebody，然后绑定给父的ebodyHandle方法
ebodyHandle接收i为包裹的事件对象，i存在于obj.detail中
 -->
<Tabs a="hello world" bind:ebody="ebodyHandle">
  插入插槽的内容
</Tabs>

<!--------------------------------------------------------------------------------------------
生命周期：
页面生命周期在各自page页面的js文件中，全局应用生命周期在一级目录app.js中 -->

<!--------------------------------------------------------------------------------------------
页面旋转
在全局app.json window字段中加入，"pageOrientation": "auto"，或者只想要单个页面旋转则加入pages的json文件中 -->

<!--------------------------------------------------------------------------------------------
本地存储：
web: localStorage.setItem("key", "value")
	localStorage.getItem("key")
小程序：wx.setStorageSync("key", "value")
	wx.getStorageSync("key")
注意：sync是getStorage的同步版本，因为如果set后立马get，异步会造成无法get到数据

web: 不管存入什么数据，都会调用toString()，把数据变成字符串，即json格式
小程序：所存即所得
-->

<!--------------------------------------------------------------------------------------------
微信支付：
哪些账户可以实现微信支付功能：
1.企业账号
2.企业账号中给开发者添加白名单

具体步骤：
1.判断缓存中有没有token，没有则跳转授权页面获取token

2.创建订单编号。（先要获取线上用户的token，由以下信息加密形成，getuserinfo和login，它包括：
1.encryptedData，
2.rawData，
3.iv，
4.signature
5.code---login，以上getuserinfo）

3.拉去微信支付并完成，手动删除购买过的商品和缓存

4.跳转页面：可以是成功购买或其他页面
 -->

<!--------------------------------------------------------------------------------------------
防抖节流：
  防抖：一般输入框等v-model类型，节流：下拉刷新和上拉加载的请求类型 -->
<script>
// 事先顶一个定时器timer，防抖封装见max-的utils
clearTimeout(this.timer);
this.timer = setTimeout(() => {
	this.getSearch({query: value})
}, 1000);
</script>

<!--------------------------------------------------------------------------------------------
意见反馈页面：
小程序有自带反馈，但为了整个app风格统一，最好还是定制

项目发布：
1.去掉url不校验勾选，把url加入平台中的白名单
2.id换为appid
3.大小不超过2m
4.版本说明 1.1.1 分别表示大版本 重要功能 细节和优化
  分别对应版本升级，特性更新，修订补丁
5.上传体验版到开放平台
6.平台提交审核，转正
-->